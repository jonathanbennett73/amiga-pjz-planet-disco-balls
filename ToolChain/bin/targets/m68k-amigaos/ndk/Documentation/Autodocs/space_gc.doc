TABLE OF CONTENTS

space_gc/--datasheet--
space_gc/SPACE_GetClass
space_gc/--datasheet--                             space_gc/--datasheet--

     NAME
        space_gc -- a placeholder gadget class.

     SUPERCLASS
        gadgetclass

     REQUIRES
        bevel.image

     DESCRIPTION
        This class does more than just take up space. space.gadget allows you 
        to create a GREL or layout resizable input areabox. You might render
        custom graphics in the area, for example, a icon editor graphic area
        might be based on space.gadget. This lets space.gadget handle its 
        domain in a way compatible with not only the present layout, but any
        future custom layout domain methods. The application can handle rendering
        and clipping in this area on the application task. It presently sends
        notification of Mouse X/Y and the inner custom application rendering area
        of the space accounting for  any outer bevel (including preference bevel
        sizes changes).

     METHODS
        OM_NEW -- Create the space gadget.  Passed to superclass.

        OM_SET -- Set object attributes.  Passed to superclass first.

        OM_DISPOSE -- Passed to superclass.

        OM_UPDATE -- Set object notification attributes & render.
            Passed to superclass first.

        OM_NOTIFY -- Notify object attributes. Passed to superclass first.

        GM_RENDER -- Renders the gadget imagery.  Overrides the superclass.

        GM_HITTEST -- always returns GMR_GADGETHIT, as long as the gadgets
            GA_ReadOnly attribute isn't set.

        GM_GOACTIVE -- Passed to superclass first. Then sends mouseevent
            notification.

        GM_HANDLEINPUT -- Handles input events once active.  Overrides the
            superclass. As long as the user keeps the mouse button pressed,
            the gadget sends notification events to its ICA_TARGET.

        GM_GOINACTIVE -- Passed to superclass. A final notification is sent.

        GM_DOMAIN -- Calculates mix/max sizes. Overrides the superclass.


        All other methods are passed to the superclass.

     ATTRIBUTES

        GA_ID (WORD)
            Applicability is (OM_NEW, OM_SET, OM_UPDATE, OM_GET, OM_NOTIFY)

        GA_ReadOnly (BOOL)
            Set to TRUE to make the gadget non-selectable, but without
            a ghost pattern.

            Defaults to FALSE.

            Applicability is (OM_NEW, OM_SET, OM_UPDATE, OM_GET)

        GA_Disabled (BOOL)
            Set to TRUE to disable gadget, FALSE otherwise

            Defaults to FALSE.

            Applicability is (OM_NEW, OM_SET, OM_UPDATE, OM_GET)

        SPACE_MinWidth (WORD)
            Minimum width of the space.gadget object.
            
            Defaults to 6.
            
            Applicability is (OM_NEW, OM_SET, OM_UPDATE)

        SPACE_MinHeight (WORD)
            Minimum height of the space.gadget object.
            
            Defaults to 4.
            
            Applicability is (OM_NEW, OM_SET, OM_UPDATE)
            
        SPACE_MouseX (WORD)
            X Position of the mouse within the space gadget.
            
            Applicability is (OM_NOTIFY).

        SPACE_MouseY (WORD)
            Y Position of the mouse within the space gadget.
            
            Applicability is (OM_NOTIFY).

        SPACE_Transparent (BOOL)
            If true, the gadget background won't be cleared before
            redraw.
            
            Defaults to FALSE.
            
            Applicability is (OM_NEW,OM_SET,OM_UPDATE).
            
        SPACE_AreaBox (struct IBox *)
            Inner area IBox application rendering bounds.
            
            Applicability is (OM_GET,OM_NOTIFY).
        
        SPACE_RenderHook (struct Hook *)
            Hook to call when the gadget refreshes. The hook function will
            find the pointer to its own struct Hook in A0, a pointer
            to the space.gadget object in A2 and a struct gpRender pointer
            in A1.
            
            Defaults to NULL.
            
            (OM_NEW,OM_SET,OM_UPDATE)
            
        SPACE_BevelStyle (WORD)
            Specifies the bevel box style (see images/bevel.h). NOTE: Before
            v45.2 the gadget didn't change the size of the bevel box, it was
            always 6x4 pixels.
            
            Defaults to BVS_NONE.
            
            (OM_NEW,OM_SET,OM_UPDATE)
space_gc/SPACE_GetClass                       space_gc/SPACE_GetClass

    NAME
        SPACE_GetClass -- Gets the pointer to the space class.

    SYNOPSIS
        space_class = SPACE_GetClass();
        D0

        Class * SPACE_GetClass(VOID);

    FUNCTION
        Obtains the pointer to the space gadget class for use with
        NewObject().  This function always returns a valid pointer so
        you do not need to check it.  The reason is that if the library
        opens fine, then the pointer returned is already setup.  (Of course
        this implies that if opening the library fails, you shouldn't be
        calling this.)

        Note that this function does not create the class, that is done
        when the class library is opened.

    INPUTS
        Nothing.

    RESULT
        space_class - Pointer to the space gadget class.

    SEE ALSO
